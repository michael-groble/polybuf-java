import "polybuf.proto";
import "extensions_base.proto";
package base;

option java_package = "polybuf.core.test";

option (polybuf.file) = {namespace_uri : "http://www.example.org/polybuf-test/extensions/ext_same_package"};

// protoc compiler error, can't have extension same as declared field
//extend Message1 {
//  required int32 id = 100;  // note: name clashes with id field in base.Message1
//}

// protoc compiler error, can't use extension name more than once
// extend base.Message2 {
//   required Enum1 type = 100;
// }

// but this works since base.Scope.id is different name than base.Message1.id
message Scope {
  extend Message1 {
    required int32 id = 100;
  }
}

